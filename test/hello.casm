(denary)        123 456 123456' 123456" 123456%
(binary)        0b101010 0b101010' 0b101010" 0b101010%
(octal)         0o777 0o777' 0o777" 0o777%
(hexadecimal)   0xF0 0xF0' 0xF0" 0xF0%
                0xf0 0xf0' 0xf0" 0xf0%

(opcodes)       ret drop mod dup swap over from to sub add div mul or xor and
                not neq eq gtn bsr dec ltn bsl inc put jump call int get set
                cif if

(opcode syms)   % - + / * | ^ & ! != = > >> -- < << ++

(opcodes with suffixes)
                add' add" add%
                +' +" +%

(text)          'A' '\n' "Hello"

(labels)        test: hello ?hello $hello hello~
                .local: .hello ?.hello $.hello .hello~
                $test.local test.local~

(raw values)    [123 0b101010 0xF0" 'A' '\n' "Hello"]

(groups)        {0x1234 get} ?{0x1234 get} :{0x1234 get} ${0x1234 get}

(positions)     @123 @0xF0
                ~123 ~0xF0
                ~hello ~.hello ~test.local

(offsets)       #.local #test.local

(macros)        #abc: 123
                #abc